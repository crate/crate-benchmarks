[setup]
statement_files = ["sql/uservisits.sql"]
statements = [
    "copy uservisits from 'https://cdn.crate.io/downloads/datasets/amplab/1node/uservisits/part-00001.gz' with (compression = 'gzip')",
    "copy uservisits from 'https://cdn.crate.io/downloads/datasets/amplab/1node/uservisits/part-00002.gz' with (compression = 'gzip')",
    "copy uservisits from 'https://cdn.crate.io/downloads/datasets/amplab/1node/uservisits/part-00003.gz' with (compression = 'gzip')",
    "copy uservisits from 'https://cdn.crate.io/downloads/datasets/amplab/1node/uservisits/part-00004.gz' with (compression = 'gzip')",
    "copy uservisits from 'https://cdn.crate.io/downloads/datasets/amplab/1node/uservisits/part-00005.gz' with (compression = 'gzip')",
    "refresh table uservisits"
]

[[queries]]
statement = '''select avg("adRevenue") from uservisits'''
iterations = 500


[[queries]]
name = "global max-long"
statement = "select max(duration) from uservisits"
iterations = 500


[[queries]]
name = "global max-double"
statement = 'select max("adRevenue") from uservisits'
iterations = 500


[[queries]]
name = "global min-long"
statement = "select min(duration) from uservisits"
iterations = 500


[[queries]]
name = "global min-double"
statement = 'select min("adRevenue") from uservisits'
iterations = 500


[[queries]]
name = "global max_by"
statement = '''select max_by("adRevenue", "visitDate") from uservisits'''
iterations = 500
min_version = '5.1.0'

[[queries]]
name = "sum on interval"
statement = '''select sum(i) from (select '2 hours'::interval from generate_series(1, 100000)) as t (i)'''
iterations = 500
min_version = '5.2.0'

[teardown]
statements = ["drop table if exists uservisits"]
